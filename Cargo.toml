[package]
name = "tetrominoes"
version = "0.1.0"
edition = "2024"

[dependencies]
bevy = { version = "0.16", default-features = false, features = [
    # Parts of Bevy:
    # "animation",                   # Enable animation for everything that supports it
    "bevy_asset", # Asset management
    # "bevy_audio",                  # Audio support
    "bevy_color",         # Color management
    "bevy_core_pipeline", # Bevy's GPU rendering architecture
    # "bevy_gilrs",                  # Gamepad/controller support
    # "bevy_gizmos",                 # Gizmos (drawing debug lines and shapes)
    "bevy_image", # Image support
    # "bevy_input_focus",            # Input focusing system for UI
    "bevy_log", # Logging to console
    # "bevy_mesh_picking_backend",   # 3D mesh picking (selection by cursor)
    # "bevy_pbr",                    # 3D rendering and Physically Based Shading
    # "bevy_picking",                # Picking (selection of objects by cursor)
    "bevy_render", # GPU support (based on `wgpu`)
    "bevy_scene",  # ECS Scenes
    "bevy_sprite", # 2D rendering (sprites, meshes, text)
    # "bevy_sprite_picking_backend", # 2D sprite picking (selection by cursor)
    "bevy_state", # App state management
    # "bevy_text",                   # Text rendering
    # "bevy_ui",                     # UI toolkit
    # "bevy_ui_picking_backend",     # UI node picking (selection by cursor)
    "bevy_window", # Window management
    "bevy_winit",  # Cross-platform window management support

    # Low-level tunables
    "std",            # Use the Rust standard library (important!)
    "async_executor", # Enable the Async Executor (Bevy task pools)
    "multi_threaded", # Enable CPU multithreading
    "sysinfo_plugin", # Support CPU and RAM usage diagnostics
    "custom_cursor",  # Support custom cursors

    # Platform-Specific
    "x11", # Linux: Support X11 windowing system
    # "android_shared_stdcxx", # Android: use shared C++ library
    # "android-game-activity", # Android: use GameActivity instead of NativeActivity
    "webgl2", # Web: use WebGL2 instead of WebGPU

    # Built-in Data
    "default_font",     # Built-in default font for UI (Fira Mono)
    "smaa_luts",        # Support SMAA antialiasing
    "tonemapping_luts", # Support different camera Tonemapping modes (enables KTX2+zstd)

    # Asset File Format Support
    # "bevy_gltf", # GLTF 3D asset support
    "png", # PNG image format for simple 2D images
    # "hdr",       # HDR image format
    # "ktx2",      # KTX2 format for GPU texture data
    # "zstd",      # ZSTD compression support in KTX2 files
    # "vorbis",    # Audio: OGG Vorbis
] }
fastrand = "2.3.0"
leafwing-input-manager = "0.17.1"
# Set max log levels. This helps avoid unwanted low-severity log spam, which can affect performance.
log = { version = "0.4", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
strum = "0.27.2"
strum_macros = "0.27.2"
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_warn",
] }

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
